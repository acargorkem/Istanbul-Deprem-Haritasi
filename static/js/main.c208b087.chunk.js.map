{"version":3,"sources":["components/Legend.js","components/IbbLegend.js","components/NavbarItems/AboutMe.js","components/NavbarItems/AboutMap.js","components/NavbarItems/AssemblyArea.js","components/NavbarItems/LastEarthquakes.js","components/NavbarItems/HelpfulLinks.js","components/Navbar.js","components/EarthQuakeInfo.js","components/Pins.js","components/HoverMenu.js","components/LayerData.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["Legend","className","name","color","map","layer","id","style","backgroundColor","IbbLegend","AboutMe","Accordion","Item","eventKey","Header","Body","title","href","target","rel","AboutMap","AssemblyArea","Button","variant","LastEarthquakes","props","a","today","Date","date","getFullYear","getMonth","getDate","fetch","res","json","onSelectEarthquake","features","geometry","coordinates","setEarthQuake","latitude","longitude","detail","properties","time","mag","onClick","HelpfulLinks","Navbar","setSidebarState","sidebar","Provider","value","defaultActiveKey","EarthQuakeInfo","earthQuake","earthquakeDate","month","day","year","Pins","useState","popupInfo","setPopupInfo","height","viewBox","cursor","fill","stroke","transform","d","tipSize","anchor","closeOnClick","onClose","React","memo","HoverMenu","hoverInfo","left","x","top","y","feature","adi","can_kaybi","agir_yarali","hafif_yarali","hastane_tedavi_yarali","barinma_ihtiyaci_hane_sayisi","bina_cok_agir_hasar","bina_agir_hasar","bina_orta_hasar","bina_hafif_hasar","anadolu_geojson_line","type","layout","paint","anadolu_geojson_polygon","maxzoom","anadolu_geojson_name","require","config","MAPBOX_TOKEN","process","Map","width","overflow","zoom","viewport","setViewport","setHoverInfo","onHover","useCallback","event","srcEvent","offsetX","offsetY","hoveredFeature","mapRef","useRef","handleViewportChange","newViewport","handleGeocoderViewportChange","transitionDuration","transitionInterpolator","FlyToInterpolator","speed","ref","mapboxApiAccessToken","onViewportChange","mapStyle","interactiveLayerIds","data","position","placeholder","bottom","padding","visibility","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c208b087.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport './Legend.css'\r\n\r\n\r\nconst Legend = () =>{\r\n\r\n  const layer = [\r\n    {name:'Ags: Çok Yüksek Risk', color:'#ee1112'},\r\n    {name:'Bgs: Yüksek Risk', color:'#deeb14'},\r\n    {name:'Cgs: Orta Risk', color:'#19e641'}\r\n  ]\r\n\r\n\r\n  return(\r\n    <div className=\"legend\">\r\n      <h4>Harita Lejandı</h4>\r\n      {layer.map((layer)=>(\r\n        <div>\r\n        <span id='risk' style={{backgroundColor:layer.color}} key={layer.name}></span>\r\n        {layer.name}\r\n        </div>\r\n      ))}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Legend;","import React from \"react\";\r\nimport \"./IbbLegend.css\";\r\n\r\nconst IbbLegend = () => {\r\n  return (\r\n    <div className=\"ibb\">\r\n      <p>\r\n        Zemin davranış analizlerinden bulunan ortalama spektral ivme değerlerine\r\n        karşı gelen bölgeler (AS, BS, ve CS) ile Borchret (1994) bağıntısı\r\n        kullanılarak eşdeğer kayma dalgası hızından hesaplanan spektral ivmelere\r\n        karşı gelen bölgeler (AV, BV ve CV) arasında bir değerlendirme\r\n        yapılmıştır.\r\n        <br />\r\n        Bu iki harita üç bölgeye ayrıldığı için, sonuç ürünü de yine üç farklı\r\n        bölgeye aşağıdaki kriterlere uygun olarak ayrılmıştır.\r\n        <br />\r\n        <strong>Ags Bölgesi</strong>, (AS ile AV) veya (AS ile BV) veya (BS ile\r\n        AV) bölgelerinin örtüştüğü bölgelerdir.\r\n        <br />\r\n        <strong>Bgs bölgesi</strong>, (AS ile CV) veya (CS ile AV) veya (BS ile\r\n        BV) bölgelerinin örtüştüğü bölgelerdir.\r\n        <br />\r\n        <strong>Cgs bölgesi</strong>, (BS ile CV) veya (CS ile BV) veya (BS ile\r\n        CV) bölgelerinin örtüştüğü bölgelerdir.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IbbLegend;\r\n","import { React } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\nimport * as Cgicons from \"react-icons/cg\";\r\nimport \"./AboutMe.css\";\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <Accordion.Item eventKey=\"4\">\r\n      <Accordion.Header>\r\n        <div className=\"accordion-header-desc\">\r\n          <IoIcons.IoIosContact />\r\n          Hakkımda\r\n        </div>\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <div className=\"aboutme-accordion-body\">\r\n          <a\r\n            title=\"LinkedIn\"\r\n            href=\"https://www.linkedin.com/in/alper-emek-362520159/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <BsIcons.BsLinkedin className=\"about-me-icon\"></BsIcons.BsLinkedin>\r\n          </a>\r\n          <a\r\n            title=\"Github\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href=\"https://github.com/cartwheei\"\r\n          >\r\n            <BsIcons.BsGithub className=\"about-me-icon\"></BsIcons.BsGithub>\r\n          </a>\r\n          <a\r\n            title=\"Portfolio\"\r\n            href=\"https://alperemek.netlify.app/\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <Cgicons.CgWebsite className=\"about-me-icon\"></Cgicons.CgWebsite>\r\n          </a>\r\n          <a\r\n            title=\"Twitter\"\r\n            href=\"https://twitter.com/AlperEmek\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            <BsIcons.BsTwitter className=\"about-me-icon\"></BsIcons.BsTwitter>\r\n          </a>\r\n        </div>\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n","import { React } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport * as BsIcons from \"react-icons/bs\";\r\nimport \"./AboutMap.css\";\r\n\r\nfunction AboutMap() {\r\n  return (\r\n    <Accordion.Item eventKey=\"1\">\r\n      <Accordion.Header>\r\n        <div className=\"accordion-header-desc\">\r\n          <BsIcons.BsFillMapFill />\r\n          Harita Hakkında\r\n        </div>\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <div>\r\n          <p className=\"ibb-map-description\">\r\n            İstanbul Anadolu Yakası yer sarsıntı haritası İstanbul Büyükşehir\r\n            Belediyesi Deprem ve Zemin İnceleme Müdürlüğü'nün Anadolu Yakası\r\n            (2009) Mikrobölgeleme Projeleri kapsamında üretilmiştir. Çalıştay\r\n            sonrası üretilen harita, tekrar projekte edilerek uygulama\r\n            oluşturulmuştur.\r\n          </p>\r\n          <p className=\"ibb-map-description\">\r\n            Harita üzerinde gezinerek 7.5 şiddetindeki deprem senaryosundaki\r\n            olası can ve mal kayıpları görüntülenebilir.\r\n          </p>\r\n        </div>\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n}\r\n\r\nexport default AboutMap;\r\n","import { React } from \"react\";\r\nimport { Accordion, Button } from \"react-bootstrap\";\r\nimport * as IoIcons from \"react-icons/io\";\r\n\r\nimport \"./AssemblyArea.css\";\r\n\r\nfunction AssemblyArea() {\r\n  return (\r\n    <Accordion.Item eventKey=\"3\">\r\n      <Accordion.Header>\r\n        <div className=\"accordion-header-desc\">\r\n          <IoIcons.IoIosPeople />\r\n          Toplanma Alanları\r\n        </div>\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <div className=\"helpful-links\">\r\n          <Button\r\n            variant=\"secondary\"\r\n            href=\"https://www.turkiye.gov.tr/afet-ve-acil-durum-yonetimi-acil-toplanma-alani-sorgulama\"\r\n            target=\"_blank\"\r\n          >\r\n            {\" \"}\r\n            <span className=\"helpful-link-button\">\r\n              AFAD E-devlet Toplanma Alanları\r\n            </span>\r\n          </Button>\r\n        </div>\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n}\r\n\r\nexport default AssemblyArea;\r\n","import { React } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction LastEarthquakes(props) {\r\n  async function requestEarthQuake() {\r\n    let today = new Date();\r\n    let date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n    const res = await fetch(\r\n      `https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson&starttime=2021-01-02&endtime=${date}\r\n      &minlatitude=40.165460682065535&maxlatitude=42.14093947168063&\r\n      minlongitude=26.153955078125&maxlongitude=30.147499999999996&limit=1`\r\n    );\r\n    const json = await res.json();\r\n\r\n    props.onSelectEarthquake(\r\n      json.features[0].geometry.coordinates[0],\r\n      json.features[0].geometry.coordinates[1]\r\n    );\r\n\r\n    props.setEarthQuake({\r\n      latitude: json.features[0].geometry.coordinates[1],\r\n      longitude: json.features[0].geometry.coordinates[0],\r\n      id: json.features[0].id,\r\n      detail: json.features[0].properties.detail,\r\n      time: json.features[0].properties.time,\r\n      mag: json.features[0].properties.mag,\r\n      title: json.features[0].properties.title,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Accordion.Item eventKey=\"2\">\r\n      <Accordion.Header>\r\n        <div className=\"accordion-header-desc\">\r\n          <RiIcons.RiEarthquakeFill />\r\n          Son Depremler\r\n        </div>\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <div className=\"helpful-links\">\r\n          <Button\r\n            className=\"helpful-link-button\"\r\n            variant=\"secondary\"\r\n            onClick={requestEarthQuake}\r\n          >\r\n            <span className=\"helpful-link-button\">Son Büyük Depremler</span>\r\n          </Button>\r\n        </div>\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n}\r\n\r\nexport default LastEarthquakes;\r\n","import { React } from \"react\";\r\nimport { Accordion, Button } from \"react-bootstrap\";\r\nimport * as IoIcons from \"react-icons/io\";\r\n\r\nimport \"./HelpfulLinks.css\";\r\n\r\nfunction HelpfulLinks() {\r\n  return (\r\n    <Accordion.Item eventKey=\"5\">\r\n      <Accordion.Header>\r\n        <div className=\"accordion-header-desc\">\r\n          <IoIcons.IoIosContact />\r\n          Kaynakça\r\n        </div>\r\n      </Accordion.Header>\r\n      <Accordion.Body>\r\n        <div className=\"helpful-links\">\r\n          <Button\r\n            className=\"helpful-link-button\"\r\n            variant=\"secondary\"\r\n            href=\"https://depremzemin.ibb.istanbul/\"\r\n            target=\"_blank\"\r\n          >\r\n            <span className=\"helpful-link-button\">\r\n              Deprem Zemin İbb Web Sayfası\r\n            </span>\r\n          </Button>\r\n          <Button\r\n            className=\"helpful-link-button\"\r\n            variant=\"secondary\"\r\n            href=\"https://depremzemin.ibb.istanbul/wp-content/uploads/2020/11/Anadolu_Yonetici_Ozeti.pdf\"\r\n            target=\"_blank\"\r\n          >\r\n            <span className=\"helpful-link-button\">\r\n              Anadolu Yakası Mikrobölgeleme Raporu\r\n            </span>\r\n          </Button>\r\n        </div>\r\n      </Accordion.Body>\r\n    </Accordion.Item>\r\n  );\r\n}\r\n\r\nexport default HelpfulLinks;\r\n","import { React } from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Accordion, Button } from \"react-bootstrap\";\r\nimport AboutMe from \"./NavbarItems/AboutMe\";\r\nimport AboutMap from \"./NavbarItems/AboutMap\";\r\nimport AssemblyArea from \"./NavbarItems/AssemblyArea\";\r\nimport LastEarthquakes from \"./NavbarItems/LastEarthquakes\";\r\nimport HelpfulLinks from \"./NavbarItems/HelpfulLinks\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar({\r\n  setSidebarState,\r\n  sidebar,\r\n  onSelectEarthquake,\r\n  setEarthQuake,\r\n}) {\r\n  const showSidebar = () => {\r\n    setSidebarState(!sidebar);\r\n  };\r\n\r\n  if (sidebar === false) {\r\n    return null;\r\n  }\r\n  return (\r\n    <IconContext.Provider value={{ color: \"\" }}>\r\n      <div className={\"nav-menu active\"}>\r\n        <Button className=\"navbar-toggle close-button\" onClick={showSidebar}>\r\n          <AiIcons.AiOutlineClose />\r\n        </Button>\r\n        <Accordion className=\"nav-menu-accordion\" defaultActiveKey=\"0\">\r\n          <AboutMap />\r\n          <HelpfulLinks />\r\n          <LastEarthquakes\r\n            onSelectEarthquake={onSelectEarthquake}\r\n            setEarthQuake={setEarthQuake}\r\n          />\r\n          <AssemblyArea />\r\n          <AboutMe />\r\n        </Accordion>\r\n      </div>\r\n    </IconContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./EarthQuakeInfo.css\";\r\n\r\nconst EarthQuakeInfo = ({ earthQuake }) => {\r\n  let earthquakeDate = new Date(earthQuake.time);\r\n  let [month, day, year] = [\r\n    earthquakeDate.getMonth(),\r\n    earthquakeDate.getDate(),\r\n    earthquakeDate.getFullYear(),\r\n  ];\r\n  return (\r\n    <div className=\"earthQuakeInfo\">\r\n      <table>\r\n        <tr>\r\n          <th>Adres:</th>\r\n          <td>{earthQuake.title}</td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th>Tarih:</th>\r\n          <td>{`${day}/${month}/${year}`}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Şiddet:</th>\r\n          <td>{earthQuake.mag}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Enlem:</th>\r\n          <td>{earthQuake.latitude}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Boylam:</th>\r\n          <td>{earthQuake.longitude}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EarthQuakeInfo;\r\n","import React, { useState } from \"react\";\r\nimport { Marker, Popup } from \"react-map-gl\";\r\nimport EarthQuakeInfo from \"./EarthQuakeInfo\";\r\nimport \"./Pins.css\";\r\n\r\nconst Pins = ({ earthQuake, setEarthQuake }) => {\r\n  const [popupInfo, setPopupInfo] = useState(true);\r\n\r\n  const changePopupInfo = () => {\r\n    setPopupInfo(!popupInfo);\r\n  };\r\n\r\n  const changePopup = () => {\r\n    setEarthQuake({});\r\n  };\r\n\r\n  const SIZE = 30;\r\n  const ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\n  return (\r\n    <>\r\n      <Marker\r\n        latitude={earthQuake.latitude}\r\n        longitude={earthQuake.longitude}\r\n        key={earthQuake.id}\r\n      >\r\n        <svg\r\n          height={SIZE}\r\n          viewBox=\"0 0 24 24\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            fill: \"#d00\",\r\n            stroke: \"none\",\r\n            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\r\n          }}\r\n          onClick={changePopupInfo}\r\n        >\r\n          <path d={ICON} />\r\n        </svg>\r\n      </Marker>\r\n      {popupInfo && (\r\n        <Popup\r\n          tipSize={5}\r\n          anchor=\"top\"\r\n          longitude={earthQuake.longitude}\r\n          latitude={earthQuake.latitude}\r\n          closeOnClick={false}\r\n          onClose={changePopup}\r\n        >\r\n          <EarthQuakeInfo earthQuake={earthQuake} />\r\n        </Popup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Pins);\r\n","import React from \"react\";\r\nimport \"./HoverMenu.css\";\r\n\r\nconst HoverMenu = ({ hoverInfo }) => {\r\n  return (\r\n    <div className=\"tooltip\" style={{ left: hoverInfo.x, top: hoverInfo.y }}>\r\n      <div>{hoverInfo.feature.properties.adi}</div>\r\n      <br />\r\n      <div className=\"tooltip-properties\">\r\n        <div className=\"tooltip-properties-human\">\r\n          <div>Can Kaybı :{hoverInfo.feature.properties.can_kaybi}</div>\r\n          <div>Ağır Yaralı :{hoverInfo.feature.properties.agir_yarali}</div>\r\n          <div>Hafif Yaralı :{hoverInfo.feature.properties.hafif_yarali}</div>\r\n          <div>\r\n            Hastanede Tedavi Edilecek Yaralı :\r\n            {hoverInfo.feature.properties.hastane_tedavi_yarali}\r\n          </div>\r\n          <div>\r\n            Barınma İhtiyacı Olacak Hane :\r\n            {hoverInfo.feature.properties.barinma_ihtiyaci_hane_sayisi}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"tooltip-properties-building\">\r\n          <div>\r\n            Çok Ağır Hasarlı Bina :\r\n            {hoverInfo.feature.properties.bina_cok_agir_hasar}\r\n          </div>\r\n          <div>\r\n            Ağır Hasarlı Bina :{hoverInfo.feature.properties.bina_agir_hasar}\r\n          </div>\r\n\r\n          <div>\r\n            Orta Hasarlı Bina :{hoverInfo.feature.properties.bina_orta_hasar}\r\n          </div>\r\n          <div>\r\n            Hafif Hasarlı Bina :{hoverInfo.feature.properties.bina_hafif_hasar}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoverMenu;\r\n","const anadolu_geojson_line = {\r\n  id: \"line\",\r\n  type: \"line\",\r\n  layout: {\r\n    \"line-join\": \"round\",\r\n    \"line-cap\": \"round\",\r\n  },\r\n  paint: {\r\n    \"line-color\": \"black\",\r\n    \"line-width\": 2,\r\n  },\r\n};\r\n\r\nconst anadolu_geojson_polygon = {\r\n  id: \"alan\",\r\n  type: \"fill\",\r\n\r\n  maxzoom: 12,\r\n  paint: {\r\n    \"fill-color\": \"black\",\r\n    \"fill-opacity\": 0.1,\r\n  },\r\n};\r\n\r\nconst anadolu_geojson_name = {\r\n  id: \"name\",\r\n  type: \"symbol\",\r\n  maxzoom: 14,\r\n  layout: {\r\n    \"text-field\": [\"get\", \"adi\"],\r\n    \"text-radial-offset\": 0.5,\r\n    \"text-justify\": \"auto\",\r\n    \"icon-image\": [\"concat\", [\"get\", \"icon\"], \"-15\"],\r\n    \"text-size\": 14,\r\n  },\r\n  paint: {\r\n    \"text-halo-width\": 2,\r\n    \"text-halo-color\": \"white\",\r\n    \"text-color\": \"black\",\r\n  },\r\n};\r\n\r\nexport { anadolu_geojson_line, anadolu_geojson_name, anadolu_geojson_polygon };\r\n","import * as React from \"react\";\r\nimport { useState, useRef, useCallback } from \"react\";\r\nimport MapGL, {\r\n  Source,\r\n  Layer,\r\n  FlyToInterpolator,\r\n  NavigationControl,\r\n  FullscreenControl,\r\n  ScaleControl,\r\n  GeolocateControl,\r\n} from \"react-map-gl\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\nimport Legend from \"./Legend\";\r\nimport IbbLegend from \"./IbbLegend\";\r\nimport Navbar from \"./Navbar\";\r\nimport Pins from \"./Pins\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\nimport HoverMenu from \"./HoverMenu\";\r\nimport {\r\n  anadolu_geojson_line,\r\n  anadolu_geojson_name,\r\n  anadolu_geojson_polygon,\r\n} from \"./LayerData\";\r\nimport \"./Map.css\";\r\n\r\nrequire(\"dotenv\").config();\r\nconst MAPBOX_TOKEN = process.env.REACT_APP_MAPBOXGL_TOKEN;\r\n\r\nfunction Map() {\r\n  const scaleControlStyle = {\r\n    bottom: 36,\r\n    left: 0,\r\n    padding: \"10px\",\r\n  };\r\n  const data_url = \"anadolu_projects.json\";\r\n\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n    latitude: 40.954492756949186,\r\n    longitude: 29.266891479492188,\r\n    zoom: 10,\r\n  });\r\n\r\n  const [hoverInfo, setHoverInfo] = useState(null);\r\n\r\n  const onHover = useCallback((event) => {\r\n    const {\r\n      features,\r\n      srcEvent: { offsetX, offsetY, target },\r\n    } = event;\r\n\r\n    const hoveredFeature = features && features[0];\r\n\r\n    setHoverInfo(\r\n      hoveredFeature && target.className === \"overlays\"\r\n        ? {\r\n            feature: hoveredFeature,\r\n            x: offsetX,\r\n            y: offsetY,\r\n          }\r\n        : null\r\n    );\r\n  }, []);\r\n\r\n  const [sidebar, setSidebarState] = useState(false);\r\n\r\n  const showSidebar = () => {\r\n    setSidebarState(!sidebar);\r\n  };\r\n\r\n  const buttonStyleShow = {\r\n    visibility: \"visible\",\r\n  };\r\n\r\n  const buttonStyleHidden = {\r\n    visibility: \"hidden\",\r\n  };\r\n\r\n  const mapRef = useRef();\r\n\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    []\r\n  );\r\n\r\n  const handleGeocoderViewportChange = useCallback(\r\n    (newViewport) => {\r\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n      return handleViewportChange({\r\n        ...newViewport,\r\n        ...geocoderDefaultOverrides,\r\n      });\r\n    },\r\n    [handleViewportChange]\r\n  );\r\n\r\n  const [earthQuake, setEarthQuake] = useState({});\r\n\r\n  const onSelectEarthquake = useCallback((longitude, latitude) => {\r\n    setViewport({\r\n      longitude,\r\n      latitude,\r\n      zoom: 13,\r\n      transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\r\n      transitionDuration: \"auto\",\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"map-wrapper\">\r\n      <MapGL\r\n        {...viewport}\r\n        className=\"mapboxgl-map\"\r\n        ref={mapRef}\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n        onViewportChange={setViewport}\r\n        mapStyle=\"mapbox://styles/cartwheel/ckulfthjs0eop17o744fi3sym\"\r\n        interactiveLayerIds={[\"alan\"]}\r\n        onHover={onHover}\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n      >\r\n        {earthQuake.id && (\r\n          <Pins earthQuake={earthQuake} setEarthQuake={setEarthQuake} />\r\n        )}\r\n\r\n        <Source type=\"geojson\" data={data_url}>\r\n          <Layer {...anadolu_geojson_line} />\r\n          <Layer {...anadolu_geojson_name} />\r\n          <Layer {...anadolu_geojson_polygon} />\r\n        </Source>\r\n\r\n        {hoverInfo && <HoverMenu hoverInfo={hoverInfo} />}\r\n        <Geocoder\r\n          className=\"geocoder\"\r\n          mapRef={mapRef}\r\n          onViewportChange={handleGeocoderViewportChange}\r\n          mapboxApiAccessToken={MAPBOX_TOKEN}\r\n          position=\"top-right\"\r\n          placeholder=\"Arama\"\r\n        />\r\n        <div className=\"map-control\">\r\n          <GeolocateControl className=\"geolocateStyle\" />\r\n          <FullscreenControl className=\"fullscreenControlStyle\" />\r\n          <NavigationControl className=\"navStyle\" />\r\n        </div>\r\n        <ScaleControl style={scaleControlStyle} />\r\n      </MapGL>\r\n\r\n      <Button\r\n        onClick={showSidebar}\r\n        className=\"collapse-menu-button\"\r\n        style={sidebar ? buttonStyleHidden : buttonStyleShow}\r\n      >\r\n        <GiIcons.GiHamburgerMenu className=\"collapse-menu-button-span-svg\" />\r\n      </Button>\r\n      <IbbLegend />\r\n      <Legend />\r\n      {sidebar && (\r\n        <Navbar\r\n          setSidebarState={setSidebarState}\r\n          sidebar={sidebar}\r\n          onSelectEarthquake={onSelectEarthquake}\r\n          setEarthQuake={setEarthQuake}\r\n        ></Navbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport Map from \"./components/Map\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\">\r\n        <div className=\"total-app\">\r\n          <Map></Map>\r\n        </div>\r\n      </Route>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}